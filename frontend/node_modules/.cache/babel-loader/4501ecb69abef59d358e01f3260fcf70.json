{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u043E\\u043C\\u0430\\u043D\\\\desktop\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getCards().then(card => setCards(card)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(info => setCurrentUser(info)).catch(err => console.log(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onCardClick: handleCardCLick,\n      cards: cards,\n      onCardLike: handleCardLike,\n      onCardDelete: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T521E1SNRSuJz4PzM3iitgDDXx4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Роман/desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","Footer","Header","Main","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getCards","then","card","catch","err","console","log","getUserInfo","info","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardCLick","closeAllPopups","handleCardLike","isLiked","likes","some","user","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","data","setUserInfo","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addNewCard"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getCards()\n      .then((card) => setCards(card))\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((info) => setCurrentUser(info))\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .setUserInfo(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setUserAvatar(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardCLick}\n        cards={cards}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n      />\n      <Footer />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}