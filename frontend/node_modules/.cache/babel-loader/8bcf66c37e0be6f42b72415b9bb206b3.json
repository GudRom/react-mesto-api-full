{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u043E\\u043C\\u0430\\u043D\\\\Desktop\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport * as auth from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const navigate = React.useNavigate(); // const location = useLocation();\n\n  React.useEffect(() => {\n    api.getCards().then(card => setCards(card)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(info => setCurrentUser(info)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    if (loggedIn) {\n      navigate('/main');\n    }\n  }, [loggedIn, navigate]);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleInfoTooltipClick() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleLogin(formData) {\n    auth.authorize(formData.email, formData.password).then(data => {\n      localStorage.setItem('jwt', data.jwt);\n      setLoggedIn(true);\n      navigate(\"/main\");\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedIn: loggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          loggedIn: loggedIn,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardCLick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {\n            onSubmitReg: handleInfoTooltipClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: isInfoTooltipOpen,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2ziEYMjE9xJKVMKrH1/HwdZSWoc=\", false, function () {\n  return [React.useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Роман/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","Footer","Header","Main","ImagePopup","api","auth","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Route","Routes","Navigate","Register","Login","InfoTooltip","App","loggedIn","setLoggedIn","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","navigate","useNavigate","useEffect","getCards","then","card","catch","err","console","log","getUserInfo","info","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleInfoTooltipClick","handleCardCLick","closeAllPopups","handleCardLike","isLiked","likes","some","user","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","data","setUserInfo","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addNewCard","handleLogin","formData","authorize","email","password","localStorage","setItem","jwt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport * as auth from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const navigate = React.useNavigate();\n  // const location = useLocation();\n\n  React.useEffect(() => {\n    api\n      .getCards()\n      .then((card) => setCards(card))\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((info) => setCurrentUser(info))\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    if (loggedIn){\n      navigate('/main');\n    }\n  }, [loggedIn, navigate])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleInfoTooltipClick() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .setUserInfo(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setUserAvatar(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleLogin(formData) {\n    auth.authorize(formData.email, formData.password)\n      .then((data) => {\n        localStorage.setItem('jwt', data.jwt);\n        setLoggedIn(true);\n        navigate(\"/main\");\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header loggedIn={loggedIn} />\n      <Routes>\n        <Route\n          path=\"/main\"\n          element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardCLick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n              <Footer />\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n              <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n              />\n              <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </ProtectedRoute>\n          }\n        />\n\n        {/* <Route element={\n      <ProtectedRoute loggedIn={loggedIn}>\n        <Footer />\n      </ProtectedRoute>} />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      /> */}\n        {/* <ImagePopup card={selectedCard} onClose={closeAllPopups} /> */}\n        <Route\n          path=\"/sign-up\"\n          element={\n            <>\n              <Register onSubmitReg={handleInfoTooltipClick}/>\n              <InfoTooltip\n                isOpen={isInfoTooltipOpen}\n                onClose={closeAllPopups}\n              />\n            </>\n          }\n        />\n        <Route path=\"/sign-in\" element={<Login />} />\n        <Route\n          path=\"/\"\n          element={loggedIn ? <Navigate to=\"/main\" /> : <Navigate to=\"/sign-in\" />}\n        />\n      </Routes>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}