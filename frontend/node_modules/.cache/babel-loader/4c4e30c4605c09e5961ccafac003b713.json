{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u043E\\u043C\\u0430\\u043D\\\\Desktop\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport * as auth from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Route, Routes, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [successReg, setSuccessReg] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [emails, setEmails] = React.useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n  React.useEffect(() => {\n    api.getCards().then(card => setCards(card)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(info => setCurrentUser(info)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    if (loggedIn) {\n      navigate(\"/main\");\n    }\n  }, [loggedIn, navigate]);\n  React.useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\");\n      auth.checkToken(token).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setEmails(res.data.email);\n        }\n      });\n    }\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleLogin(formData) {\n    auth.authorize(formData.email, formData.password).then(data => {\n      localStorage.setItem('token', data.token);\n      setLoggedIn(true);\n      navigate(\"/main\");\n    }).catch(err => console.log(err));\n  }\n\n  function handleRegistration(formData) {\n    auth.register(formData.email, formData.password).then(() => {\n      setSuccessReg(true);\n      setIsInfoTooltipOpen(true);\n      console.log(successReg);\n      navigate(\"/sign-in\");\n    }).catch(err => {\n      console.log(err);\n      setSuccessReg(false);\n      setIsInfoTooltipOpen(true);\n    });\n  }\n\n  function logout() {\n    setLoggedIn(false);\n    localStorage.removeItem('token');\n    navigate(\"/sign-in\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedIn: loggedIn,\n      email: emails,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          loggedIn: loggedIn,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardCLick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {\n            handleRegistration: handleRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: isInfoTooltipOpen,\n            isSuccess: successReg,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: isInfoTooltipOpen,\n            isSuccess: successReg,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9BR0DMrTFeUWi8juAF/6X1Nuisk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Роман/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","Footer","Header","Main","ImagePopup","api","auth","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Route","Routes","Navigate","useNavigate","useLocation","Register","Login","InfoTooltip","App","loggedIn","setLoggedIn","useState","successReg","setSuccessReg","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","emails","setEmails","navigate","location","console","log","useEffect","getCards","then","card","catch","err","getUserInfo","info","localStorage","getItem","token","checkToken","res","data","email","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardCLick","closeAllPopups","handleCardLike","isLiked","likes","some","user","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","setUserInfo","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","addNewCard","handleLogin","formData","authorize","password","setItem","handleRegistration","register","logout","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport * as auth from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Route, Routes, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [successReg, setSuccessReg] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [emails, setEmails] = React.useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location)\n\n  React.useEffect(() => {\n    api\n      .getCards()\n      .then((card) => setCards(card))\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((info) => setCurrentUser(info))\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      navigate(\"/main\");\n    }\n  }, [loggedIn, navigate]);\n\n  React.useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\");\n      auth.checkToken(token)\n      .then((res) => {\n        if (res) {\n          setLoggedIn(true);\n          setEmails(res.data.email)\n        }\n      });\n    }\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardCLick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку, создаем копию массива, исключив удаленную карточку\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .setUserInfo(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setUserAvatar(data)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleLogin(formData) {\n    auth\n      .authorize(formData.email, formData.password)\n      .then((data) => {\n        localStorage.setItem('token', data.token);\n        setLoggedIn(true);\n        navigate(\"/main\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleRegistration(formData) {\n    auth\n      .register(formData.email, formData.password)\n      .then(() => {\n        setSuccessReg(true);\n        setIsInfoTooltipOpen(true);\n        console.log(successReg);\n        navigate(\"/sign-in\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setSuccessReg(false);\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function logout() {\n    setLoggedIn(false);\n    localStorage.removeItem('token')\n    navigate(\"/sign-in\")\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header loggedIn={loggedIn} email={emails} logout={logout} />\n      <Routes>\n        <Route\n          path=\"/main\"\n          element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardCLick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n              <Footer />\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n              <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n              />\n              <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </ProtectedRoute>\n          }\n        />\n        {/* <Route element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Footer />\n            </ProtectedRoute>} />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            /> */}\n        {/* <ImagePopup card={selectedCard} onClose={closeAllPopups} /> */}\n        <Route\n          path=\"/sign-up\"\n          element={\n            <>\n              <Register handleRegistration={handleRegistration} />\n              <InfoTooltip\n                isOpen={isInfoTooltipOpen}\n                isSuccess={successReg}\n                onClose={closeAllPopups}\n              />\n            </>\n          }\n        />\n        <Route\n          path=\"/sign-in\"\n          element={\n            <>\n              <Login handleLogin={handleLogin} />\n              <InfoTooltip\n                isOpen={isInfoTooltipOpen}\n                isSuccess={successReg}\n                onClose={closeAllPopups}\n              />\n            </>\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            loggedIn ? <Navigate to=\"/main\" /> : <Navigate to=\"/sign-in\" />\n          }\n        />\n      </Routes>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}